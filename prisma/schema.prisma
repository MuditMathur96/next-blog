// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User{

  id String @id @db.ObjectId() @default(auto()) @map("_id")
  name String 
  email String @unique()
  password String? 

  image String?
  emailVerified DateTime?

  Blogs Blog[]
  accounts      Account[]
  sessions      Session[]



}

model Category{

  id String @id @db.ObjectId() @default(auto()) @map("_id")
  name String
  Blogs Blog[]

 

}

model Blog{

  id String @id @db.ObjectId() @default(auto()) @map("_id")
  title String
  imageUrl String
  body String

  createdBy String @db.ObjectId() 
  User User  @relation(fields: [createdBy], references: [id], onDelete:Cascade)

  categoryId String @db.ObjectId 
  Category Category @relation(fields: [categoryId],references: [id], onDelete:Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  emailVerified DateTime?
 

}

model VerificationToken {
  id String @id @default(auto()) @db.ObjectId @map("_id")
  identifier String 
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Session {
  id String @id @default(auto()) @db.ObjectId @map("_id")
  sessionToken String   @unique
  userId  String @db.ObjectId()
  expires DateTime
  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id String @id @default(auto()) @db.ObjectId @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? 
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}